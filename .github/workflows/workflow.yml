name: Deploy to Hetzner Load Balancer Targets

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: self-hosted  # Ensure this runner has network access to the private instances

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          sudo docker build -t ${{ secrets.DOCKER_USERNAME }}/app-jornada-front:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          sudo docker push ${{ secrets.DOCKER_USERNAME }}/app-jornada-front:latest

      - name: Get Hetzner Load Balancer Targets
        id: get_targets
        run: |
          LB_ID=2188685  # Replace with your actual Load Balancer ID
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HETZNER_API_TOKEN }}" \
            "https://api.hetzner.cloud/v1/load_balancers/${LB_ID}/targets")
          echo "$RESPONSE"
          TARGETS=$(echo "$RESPONSE" | jq -r '.targets[].ip')
          echo "targets=$TARGETS" >> $GITHUB_OUTPUT

      - name: Deploy to Each Target
        run: |
          for TARGET_IP in ${{ steps.get_targets.outputs.targets }}
          do
            echo "Deploying to $TARGET_IP"
            ssh -o StrictHostKeyChecking=no user@$TARGET_IP << 'EOF'
              docker pull joemama7/app-jornada-front:latest
              docker stop app-jornada-front || true
              docker rm app-jornada-front || true
              docker run -d --name app-jornada-front -p 80:80 joemama7/app-jornada-front:latest
            EOF
          done
