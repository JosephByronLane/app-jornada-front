name: Deploy to Hetzner Load Balancer Targets

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    runs-on: self-hosted  # Ensure this runner has network access to the private instances

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}  # Consider using an access token

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/app-jornada-front:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/app-jornada-front:latest


          
      - name: Get Hetzner Servers
        run: |
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.HETZNER_API_TOKEN }}" "https://api.hetzner.cloud/v1/servers")
          echo "$RESPONSE"
          SERVERS=$(echo "$RESPONSE" | jq -r '.servers[] | select(.name | contains("app-jornada-front-")) | .private_net[0].ip') 
          echo "servers=$SERVERS" >> $GITHUB_ENV

      - name: Deploy to Each Target
        run: |
          for TARGET_IP in ${{ env.servers }}
          do
            ssh -o StrictHostKeyChecking=no user@5.161.195.190 << 'EOF'
              ssh -o StrictHostKeyChecking=no user@$TARGET_IP << 'INNER_EOF'
                docker pull joemama7/app-jornada-front:latest
                docker stop app-jornada-front || true
                docker rm app-jornada-front || true
                docker run -d --name app-jornada-front -p 80:80 joemama7/app-jornada-front:latest
              INNER_EOF
            EOF
          done